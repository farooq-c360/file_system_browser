{"ast":null,"code":"import axios from 'axios';\nexport function ListAllFiles(folder) {\n  var request = axios.get('http://localhost:2000/files/' + encodeURIComponent(folder)).then(function (result) {\n    var mData = result.data.map(function (d) {\n      var dItem = {\n        'Icon': d.IsDirectory ? \"folder\" : \"description\",\n        'Name': (folder == '--root--' ? '' : folder) + '/' + (d.Name + (d.Ext === undefined ? '' : d.Ext)),\n        'DisplayName': d.Name + (d.Ext === undefined ? '' : d.Ext),\n        'LastChanged': d.LastChanged,\n        'Size': d.Size\n      };\n      return dItem;\n    });\n    var folderName = decodeURIComponent(folder);\n    var folders = folderName.split('/');\n    console.log(folderName);\n\n    if (folderName !== '--root--') {\n      folders.length = folders.length - 1;\n      mData.unshift({\n        Icon: 'folder',\n        Name: folders.join('/').length > 0 ? folders.join('/') : '--root--',\n        DisplayName: '..'\n      });\n    }\n\n    return {\n      files: mData,\n      folder: folder\n    };\n  });\n  return {\n    type: 'LIST_ALL_FILES',\n    payload: request\n  };\n}\nexport function AddFolder(folder, parentFolder) {\n  var request = axios.post('http://localhost:2000/files/add/', {\n    folder: encodeURIComponent(folder),\n    parentFolder: parentFolder\n  }).then(function (result) {\n    return {\n      type: 'ADD_FOLDER',\n      payload: {\n        message: 'OK'\n      }\n    };\n  });\n}\nexport function ClearState() {\n  return {\n    type: 'CLEAR_STATE',\n    payload: null\n  };\n}","map":{"version":3,"sources":["/Users/farooqahmed/Documents/Farooq Ahmed/react/kbs.web.mdd/file_system_browser/src/actions/ListData.js"],"names":["axios","ListAllFiles","folder","request","get","encodeURIComponent","then","result","mData","data","map","d","dItem","IsDirectory","Name","Ext","undefined","LastChanged","Size","folderName","decodeURIComponent","folders","split","console","log","length","unshift","Icon","join","DisplayName","files","type","payload","AddFolder","parentFolder","post","message","ClearState"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AACjC,MAAMC,OAAO,GAAIH,KAAK,CAACI,GAAN,CACb,iCAAiCC,kBAAkB,CAACH,MAAD,CADtC,EAEbI,IAFa,CAER,UAAAC,MAAM,EAAK;AACd,QAAIC,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAYC,GAAZ,CAAgB,UAAAC,CAAC,EAAI;AAC7B,UAAIC,KAAK,GAAG;AACV,gBAASD,CAAC,CAACE,WAAF,GAAgB,QAAhB,GAA2B,aAD1B;AAEV,gBAAS,CAACX,MAAM,IAAI,UAAV,GAAuB,EAAvB,GAA4BA,MAA7B,IAAuC,GAAvC,IAA8CS,CAAC,CAACG,IAAF,IAAUH,CAAC,CAACI,GAAF,KAAUC,SAAV,GAAsB,EAAtB,GAA2BL,CAAC,CAACI,GAAvC,CAA9C,CAFC;AAGV,uBAAeJ,CAAC,CAACG,IAAF,IAAUH,CAAC,CAACI,GAAF,KAAUC,SAAV,GAAsB,EAAtB,GAA2BL,CAAC,CAACI,GAAvC,CAHL;AAIV,uBAAgBJ,CAAC,CAACM,WAJR;AAKV,gBAASN,CAAC,CAACO;AALD,OAAZ;AAOA,aAAON,KAAP;AACD,KATS,CAAZ;AAWE,QAAIO,UAAU,GAAGC,kBAAkB,CAAClB,MAAD,CAAnC;AACA,QAAImB,OAAO,GAAGF,UAAU,CAACG,KAAX,CAAiB,GAAjB,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;;AACA,QAAGA,UAAU,KAAK,UAAlB,EAA8B;AAC5BE,MAAAA,OAAO,CAACI,MAAR,GAAiBJ,OAAO,CAACI,MAAR,GAAiB,CAAlC;AACAjB,MAAAA,KAAK,CAACkB,OAAN,CAAc;AAACC,QAAAA,IAAI,EAAE,QAAP;AAAiBb,QAAAA,IAAI,EAAEO,OAAO,CAACO,IAAR,CAAa,GAAb,EAAkBH,MAAlB,GAA2B,CAA3B,GAA+BJ,OAAO,CAACO,IAAR,CAAa,GAAb,CAA/B,GAAmD,UAA1E;AAAsFC,QAAAA,WAAW,EAAE;AAAnG,OAAd;AACD;;AAED,WAAO;AAAEC,MAAAA,KAAK,EAACtB,KAAR;AAAeN,MAAAA,MAAM,EAANA;AAAf,KAAP;AACL,GAvBc,CAAjB;AAyBA,SAAO;AACH6B,IAAAA,IAAI,EAAE,gBADH;AAEHC,IAAAA,OAAO,EAAE7B;AAFN,GAAP;AAIH;AAED,OAAO,SAAS8B,SAAT,CAAmB/B,MAAnB,EAA2BgC,YAA3B,EAAyC;AAC9C,MAAM/B,OAAO,GAAGH,KAAK,CAACmC,IAAN,CACd,kCADc,EAEd;AACEjC,IAAAA,MAAM,EAAEG,kBAAkB,CAACH,MAAD,CAD5B;AAEEgC,IAAAA,YAAY,EAAZA;AAFF,GAFc,EAMd5B,IANc,CAMT,UAAAC,MAAM,EAAI;AACf,WAAO;AACLwB,MAAAA,IAAI,EAAE,YADD;AAELC,MAAAA,OAAO,EAAE;AAACI,QAAAA,OAAO,EAAE;AAAV;AAFJ,KAAP;AAID,GAXe,CAAhB;AAYD;AAED,OAAO,SAASC,UAAT,GAAsB;AACzB,SAAO;AACHN,IAAAA,IAAI,EAAE,aADH;AAEHC,IAAAA,OAAO,EAAE;AAFN,GAAP;AAIH","sourcesContent":["import axios from 'axios';\n\nexport function ListAllFiles(folder) {\n    const request =  axios.get(\n        'http://localhost:2000/files/' + encodeURIComponent(folder),\n      ).then(result =>  {\n          var mData = result.data.map(d => {\n              var dItem = {\n                'Icon' : d.IsDirectory ? \"folder\" : \"description\",\n                'Name' : (folder == '--root--' ? '' : folder) + '/' + (d.Name + (d.Ext === undefined ? '' : d.Ext)),\n                'DisplayName': d.Name + (d.Ext === undefined ? '' : d.Ext),\n                'LastChanged' : d.LastChanged,\n                'Size':  d.Size\n              };\n              return dItem;\n            });\n      \n            let folderName = decodeURIComponent(folder);\n            let folders = folderName.split('/');\n            console.log(folderName);\n            if(folderName !== '--root--') {\n              folders.length = folders.length - 1;\n              mData.unshift({Icon: 'folder', Name: folders.join('/').length > 0 ? folders.join('/') : '--root--', DisplayName: '..' });\n            }\n\n            return { files:mData, folder };\n      });\n      \n    return {\n        type: 'LIST_ALL_FILES',\n        payload: request\n    }\n}\n\nexport function AddFolder(folder, parentFolder) {\n  const request = axios.post(\n    'http://localhost:2000/files/add/',\n    {\n      folder: encodeURIComponent(folder),\n      parentFolder\n    }\n  ).then(result => {\n    return {\n      type: 'ADD_FOLDER',\n      payload: {message: 'OK'}\n    }\n  })\n}\n\nexport function ClearState() {\n    return {\n        type: 'CLEAR_STATE',\n        payload: null\n    }\n}"]},"metadata":{},"sourceType":"module"}