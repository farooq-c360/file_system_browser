{"ast":null,"code":"import axios from 'axios';\nexport function ListAllFiles(folder) {\n  var request = axios.get(config.get(process.env.NODE_ENV).API_URLS.BROWSER.LIST + encodeURIComponent(folder)).then(function (result) {\n    var mData = result.data.map(function (d) {\n      var dItem = {\n        'Icon': d.IsDirectory ? \"folder\" : \"description\",\n        'Name': (folder == '--root--' ? '' : folder) + '/' + (d.Name + (d.Ext === undefined ? '' : d.Ext)),\n        'DisplayName': d.Name + (d.Ext === undefined ? '' : d.Ext),\n        'LastChanged': d.LastChanged,\n        'Size': d.Size\n      };\n      return dItem;\n    });\n    var folderName = decodeURIComponent(folder);\n    var folders = folderName.split('/');\n    console.log(folderName);\n\n    if (folderName !== '--root--') {\n      folders.length = folders.length - 1;\n      mData.unshift({\n        Icon: 'folder',\n        Name: folders.join('/').length > 0 ? folders.join('/') : '--root--',\n        DisplayName: '..'\n      });\n    }\n\n    return {\n      files: mData,\n      folder: folder\n    };\n  });\n  return {\n    type: 'LIST_ALL_FILES',\n    payload: request\n  };\n}\nexport function AddFolder(folder, parentFolder, next) {\n  console.log('in action');\n  console.log(parentFolder + folder);\n  var request = axios.post(config.get(process.env.NODE_ENV).API_URLS.BROWSER.ADD, {\n    type: 'folder',\n    folder: folder,\n    parentFolder: parentFolder\n  }).then(function (result) {\n    next();\n  })[\"catch\"](function (err) {\n    console.log(err);\n  });\n  return {\n    type: 'ADD_FOLDER',\n    payload: null\n  };\n}\nexport function ClearState() {\n  return {\n    type: 'CLEAR_STATE',\n    payload: null\n  };\n}","map":{"version":3,"sources":["/Users/farooqahmed/Documents/Farooq Ahmed/react/kbs.web.mdd/file_system_browser/src/actions/browser.js"],"names":["axios","ListAllFiles","folder","request","get","config","process","env","NODE_ENV","API_URLS","BROWSER","LIST","encodeURIComponent","then","result","mData","data","map","d","dItem","IsDirectory","Name","Ext","undefined","LastChanged","Size","folderName","decodeURIComponent","folders","split","console","log","length","unshift","Icon","join","DisplayName","files","type","payload","AddFolder","parentFolder","next","post","ADD","err","ClearState"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nexport function ListAllFiles(folder) {\n    const request =  axios.get(\n      config.get(process.env.NODE_ENV).API_URLS.BROWSER.LIST + encodeURIComponent(folder),\n      ).then(result =>  {\n          var mData = result.data.map(d => {\n              var dItem = {\n                'Icon' : d.IsDirectory ? \"folder\" : \"description\",\n                'Name' : (folder == '--root--' ? '' : folder) + '/' + (d.Name + (d.Ext === undefined ? '' : d.Ext)),\n                'DisplayName': d.Name + (d.Ext === undefined ? '' : d.Ext),\n                'LastChanged' : d.LastChanged,\n                'Size':  d.Size\n              };\n              return dItem;\n            });\n      \n            let folderName = decodeURIComponent(folder);\n            let folders = folderName.split('/');\n            console.log(folderName);\n            if(folderName !== '--root--') {\n              folders.length = folders.length - 1;\n              mData.unshift({Icon: 'folder', Name: folders.join('/').length > 0 ? folders.join('/') : '--root--', DisplayName: '..' });\n            }\n\n            return { files:mData, folder };\n      });\n      \n    return {\n        type: 'LIST_ALL_FILES',\n        payload: request\n    }\n}\n\nexport function AddFolder(folder, parentFolder, next) {\n  console.log('in action');\n  console.log(parentFolder + folder);\n  \n  const request = axios.post(\n    config.get(process.env.NODE_ENV).API_URLS.BROWSER.ADD ,\n    {\n      type : 'folder',\n      folder: folder,\n      parentFolder: parentFolder\n    }\n  ).then(result => {\n    next();\n  }).catch(err => {\n    console.log(err);\n  });\n\n  return {\n    type: 'ADD_FOLDER',\n    payload: null\n  }\n}\n\nexport function ClearState() {\n    return {\n        type: 'CLEAR_STATE',\n        payload: null\n    }\n}"]},"metadata":{},"sourceType":"module"}