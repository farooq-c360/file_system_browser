{"ast":null,"code":"import _defineProperty from \"/Users/farooqahmed/Documents/Farooq Ahmed/react/kbs.web.fb/file_system_browser/web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/farooqahmed/Documents/Farooq Ahmed/react/kbs.web.fb/file_system_browser/web-app/src/components/shared/Sidebar/Sidebar.js\";\n\n/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\"; // core components\n\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"../Navbars/RTLNavbarLinks.js\";\nimport styles from \"../../../assets/jss/material-dashboard-react/components/sidebarStyle.js\";\nvar useStyles = makeStyles(styles);\nexport default function Sidebar(props) {\n  var classes = useStyles(); // verifies if routeName is the one active (in browser input)\n\n  function activeRoute(routeName) {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  }\n\n  var color = props.color,\n      logo = props.logo,\n      image = props.image,\n      logoText = props.logoText,\n      routes = props.routes;\n  var links = React.createElement(List, {\n    className: classes.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, routes.map(function (prop, key) {\n    var activePro = \" \";\n    var listItemClasses;\n\n    if (prop.path === \"/upgrade-to-pro\") {\n      activePro = classes.activePro + \" \";\n      listItemClasses = classNames(_defineProperty({}, \" \" + classes[color], true));\n    } else {\n      listItemClasses = classNames(_defineProperty({}, \" \" + classes[color], activeRoute(prop.layout + prop.path)));\n    }\n\n    var whiteFontClasses = classNames(_defineProperty({}, \" \" + classes.whiteFont, activeRoute(prop.layout + prop.path)));\n    return React.createElement(NavLink, {\n      to: prop.layout + prop.path + '/' + encodeURIComponent('/Users/farooqahmed/Documents/Farooq Ahmed/react/kbs.web.fileServer'),\n      className: activePro + classes.item,\n      activeClassName: \"active\",\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      className: classes.itemLink + listItemClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, typeof prop.icon === \"string\" ? React.createElement(Icon, {\n      className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, prop.icon) : React.createElement(prop.icon, {\n      className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      primary: props.rtlActive ? prop.rtlName : prop.name,\n      className: classNames(classes.itemText, whiteFontClasses, _defineProperty({}, classes.itemTextRTL, props.rtlActive)),\n      disableTypography: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })));\n  }));\n  var brand = React.createElement(\"div\", {\n    className: classes.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#\",\n    className: classNames(classes.logoLink, _defineProperty({}, classes.logoLinkRTL, props.rtlActive)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.logoImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(FolderOpenSharpIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), logoText));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"temporary\",\n    anchor: props.rtlActive ? \"left\" : \"right\",\n    open: props.open,\n    classes: {\n      paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n    },\n    onClose: props.handleDrawerToggle,\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, brand, React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, props.rtlActive ? React.createElement(RTLNavbarLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }) : React.createElement(AdminNavbarLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), links), image !== undefined ? React.createElement(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }) : null)), React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    anchor: props.rtlActive ? \"right\" : \"left\",\n    variant: \"permanent\",\n    open: true,\n    classes: {\n      paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, brand, React.createElement(\"div\", {\n    className: classes.sidebarWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, links), image !== undefined ? React.createElement(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }) : null)));\n}\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/farooqahmed/Documents/Farooq Ahmed/react/kbs.web.fb/file_system_browser/web-app/src/components/shared/Sidebar/Sidebar.js"],"names":["React","classNames","PropTypes","NavLink","makeStyles","Drawer","Hidden","List","ListItem","ListItemText","Icon","AdminNavbarLinks","RTLNavbarLinks","styles","useStyles","Sidebar","props","classes","activeRoute","routeName","window","location","href","indexOf","color","logo","image","logoText","routes","links","list","map","prop","key","activePro","listItemClasses","path","layout","whiteFontClasses","whiteFont","encodeURIComponent","item","itemLink","icon","itemIcon","itemIconRTL","rtlActive","rtlName","name","itemText","itemTextRTL","brand","logoLink","logoLinkRTL","logoImage","open","paper","drawerPaper","drawerPaperRTL","handleDrawerToggle","keepMounted","sidebarWrapper","undefined","background","backgroundImage","propTypes","bool","func","bgColor","oneOf","string","arrayOf","object"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\n// core components\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"../Navbars/RTLNavbarLinks.js\";\n\nimport styles from \"../../../assets/jss/material-dashboard-react/components/sidebarStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Sidebar(props) {\n  const classes = useStyles();\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  }\n  const { color, logo, image, logoText, routes } = props;\n  var links = (\n    <List className={classes.list}>\n      {routes.map((prop, key) => {\n        var activePro = \" \";\n        var listItemClasses;\n        if (prop.path === \"/upgrade-to-pro\") {\n          activePro = classes.activePro + \" \";\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: true\n          });\n        } else {\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\n          });\n        }\n        const whiteFontClasses = classNames({\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\n        });\n        return (\n          <NavLink\n            to={prop.layout + prop.path + '/' + encodeURIComponent('/Users/farooqahmed/Documents/Farooq Ahmed/react/kbs.web.fileServer')}\n            className={activePro + classes.item}\n            activeClassName=\"active\"\n            key={key}\n          >\n            <ListItem button className={classes.itemLink + listItemClasses}>\n              {typeof prop.icon === \"string\" ? (\n                <Icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive\n                  })}\n                >\n                  {prop.icon}\n                </Icon>\n              ) : (\n                <prop.icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive\n                  })}\n                />\n              )}\n              <ListItemText\n                primary={props.rtlActive ? prop.rtlName : prop.name}\n                className={classNames(classes.itemText, whiteFontClasses, {\n                  [classes.itemTextRTL]: props.rtlActive\n                })}\n                disableTypography={true}\n              />\n            </ListItem>\n          </NavLink>\n        );\n      })}\n    </List>\n  );\n  var brand = (\n    <div className={classes.logo}>\n      <a\n        href=\"#\"\n        className={classNames(classes.logoLink, {\n          [classes.logoLinkRTL]: props.rtlActive\n        })}\n      >\n        <div className={classes.logoImage}>\n        <FolderOpenSharpIcon>\n          \n        </FolderOpenSharpIcon>\n        </div>\n        {logoText}\n      </a>\n    </div>\n  );\n  return (\n    <div>\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={props.rtlActive ? \"left\" : \"right\"}\n          open={props.open}\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n          onClose={props.handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true // Better open performance on mobile.\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>\n            {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\n            {links}\n          </div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          anchor={props.rtlActive ? \"right\" : \"left\"}\n          variant=\"permanent\"\n          open\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>{links}</div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n    </div>\n  );\n}\n\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}