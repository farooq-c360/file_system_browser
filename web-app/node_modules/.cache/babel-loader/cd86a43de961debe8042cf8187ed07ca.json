{"ast":null,"code":"var _jsxFileName = \"/Users/farooqahmed/Documents/Farooq Ahmed/react/kbs.web.mdd/file_system_browser/src/components/browser/ListFiles.js\";\nimport React, { useEffect } from \"react\";\nimport Moment from 'react-moment';\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Stars from \"@material-ui/icons/Stars\";\nimport Add from \"@material-ui/icons/Add\";\nimport GridItem from \"../../components/shared/Grid/GridItem.js\";\nimport GridContainer from \"../../components/shared/Grid/GridContainer.js\";\nimport Card from \"../../components/shared/Card/Card.js\";\nimport CardHeader from \"../../components/shared/Card/CardHeader.js\";\nimport CardBody from \"../../components/shared/Card/CardBody.js\";\nimport Button from \"../../components/shared/CustomButtons/Button.js\";\nimport CustomInput from 'components/shared/CustomInput/CustomInput.js';\nimport { connect } from 'react-redux';\nimport { ListAllFiles, ClearState } from '../../actions/ListData.js';\nimport { bindActionCreators } from 'redux'; // core components\n\nimport styles from \"../../assets/jss/material-dashboard-react/components/tableStyle.js\";\nimport { Link } from \"@material-ui/core\";\nvar useStyles = makeStyles(styles);\n\nfunction ListFiels(props) {\n  useEffect(function () {\n    props.ListAllFiles(decodeURIComponent(props.params.folder));\n    return function () {\n      props.ClearState();\n    };\n  }, []);\n  state = {\n    fodler: ''\n  };\n\n  function rowClickHandler(folder) {\n    props.ListAllFiles(folder);\n  }\n\n  function addClickHandler(folder) {\n    console.log(folder);\n  }\n\n  var classes = useStyles();\n  var tableHead = props.tableHead,\n      tableHeaderColor = props.tableHeaderColor,\n      files = props.files;\n  var iconType = null;\n  console.log('in Custom table');\n  console.log(props);\n  debugger;\n  return React.createElement(\"div\", {\n    className: classes.tableResponsive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Card, {\n    plain: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      textAlign: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    formControlProps: {\n      className: classes.margin + \" \" + classes.search\n    },\n    inputProps: {\n      placeholder: \"Folder Name\",\n      inputProps: {\n        \"aria-label\": \"Folder Name\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Button, {\n    style: {\n      backgroundColor: '#ff9800'\n    },\n    color: \"black\",\n    \"aria-label\": \"edit\",\n    justIcon: true,\n    round: true,\n    onClick: function onClick() {\n      addClickHandler();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Add, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(Button, {\n    style: {\n      backgroundColor: '#ff9800'\n    },\n    color: \"black\",\n    \"aria-label\": \"edit\",\n    justIcon: true,\n    round: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Stars, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }))), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, tableHead !== undefined ? React.createElement(TableHead, {\n    className: classes[tableHeaderColor + \"TableHeader\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    className: classes.tableHeadRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, tableHead.map(function (prop, key) {\n    return React.createElement(TableCell, {\n      className: classes.tableCell + \" \" + classes.tableHeadCell,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, prop);\n  }))) : null, React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, files.files && files.files.files.length > 0 ? files.files.files.map(function (prop, key) {\n    var rowProp = prop.Name;\n    return React.createElement(TableRow, {\n      key: key,\n      className: classes.tableBodyRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, Object.entries(prop).map(function (prop, key) {\n      return prop[0] !== 'Name' ? React.createElement(TableCell, {\n        className: classes.tableCell,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, prop[0] === \"Icon\" ? prop[1] === \"folder\" ? React.createElement(Link, {\n        folderName: rowProp,\n        onClick: function onClick() {\n          return rowClickHandler(rowProp);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"material-icons-outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, prop[1])) : React.createElement(Icon, {\n        className: \"material-icons-outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, prop[1]) : prop[0] == \"LastChanged\" ? React.createElement(Moment, {\n        fromNow: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, prop[1]) : prop[1]) : '';\n    }));\n  }) : null)))))));\n}\n\nfunction mapStateToProps(state) {\n  console.log('in mapStateToProps');\n  console.log(state);\n  return {\n    files: state.files\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    ListAllFiles: ListAllFiles,\n    ClearState: ClearState\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListFiels);\nListFiels.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\nListFiels.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\"warning\", \"primary\", \"danger\", \"success\", \"info\", \"rose\", \"gray\"]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};","map":{"version":3,"sources":["/Users/farooqahmed/Documents/Farooq Ahmed/react/kbs.web.mdd/file_system_browser/src/components/browser/ListFiles.js"],"names":["React","useEffect","Moment","PropTypes","makeStyles","Table","TableHead","TableRow","TableBody","TableCell","Icon","Stars","Add","GridItem","GridContainer","Card","CardHeader","CardBody","Button","CustomInput","connect","ListAllFiles","ClearState","bindActionCreators","styles","Link","useStyles","ListFiels","props","decodeURIComponent","params","folder","state","fodler","rowClickHandler","addClickHandler","console","log","classes","tableHead","tableHeaderColor","files","iconType","tableResponsive","textAlign","className","margin","search","placeholder","inputProps","backgroundColor","table","undefined","tableHeadRow","map","prop","key","tableCell","tableHeadCell","length","rowProp","Name","tableBodyRow","Object","entries","mapStateToProps","mapDispatchToProps","dispatch","defaultProps","propTypes","oneOf","arrayOf","string","tableData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,aAAP,MAA0B,+CAA1B;AACA,OAAOC,IAAP,MAAiB,sCAAjB;AACA,OAAOC,UAAP,MAAuB,4CAAvB;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,MAAP,MAAmB,iDAAnB;AACA,OAAOC,WAAP,MAAwB,8CAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,YAAR,EAAsBC,UAAtB,QAAuC,2BAAvC;AACA,SAASC,kBAAT,QAAmC,OAAnC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,oEAAnB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,IAAMC,SAAS,GAAGtB,UAAU,CAACoB,MAAD,CAA5B;;AAEA,SAASG,SAAT,CAAmBC,KAAnB,EAA0B;AACxB3B,EAAAA,SAAS,CAAC,YAAM;AACd2B,IAAAA,KAAK,CAACP,YAAN,CAAmBQ,kBAAkB,CAACD,KAAK,CAACE,MAAN,CAAaC,MAAd,CAArC;AACA,WAAO,YAAM;AACVH,MAAAA,KAAK,CAACN,UAAN;AACF,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOAU,EAAAA,KAAK,GAAG;AACNC,IAAAA,MAAM,EAAE;AADF,GAAR;;AAIA,WAASC,eAAT,CAAyBH,MAAzB,EACA;AACEH,IAAAA,KAAK,CAACP,YAAN,CAAmBU,MAAnB;AACD;;AAED,WAASI,eAAT,CAAyBJ,MAAzB,EAAiC;AAC/BK,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACD;;AAED,MAAMO,OAAO,GAAGZ,SAAS,EAAzB;AArBwB,MAsBhBa,SAtBgB,GAsBuBX,KAtBvB,CAsBhBW,SAtBgB;AAAA,MAsBLC,gBAtBK,GAsBuBZ,KAtBvB,CAsBLY,gBAtBK;AAAA,MAsBaC,KAtBb,GAsBuBb,KAtBvB,CAsBaa,KAtBb;AAuBxB,MAAIC,QAAQ,GAAG,IAAf;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AAEA;AACA,SACE;AAAK,IAAA,SAAS,EAAEU,OAAO,CAACK,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,EAAtB;AAA0B,IAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAC;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,gBAAgB,EAAE;AAChBC,MAAAA,SAAS,EAAEP,OAAO,CAACQ,MAAR,GAAiB,GAAjB,GAAuBR,OAAO,CAACS;AAD1B,KADpB;AAIE,IAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE,aADH;AAEVC,MAAAA,UAAU,EAAE;AACV,sBAAc;AADJ;AAFF,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAC;AAAjB,KAAf;AAA4C,IAAA,KAAK,EAAC,OAAlD;AAA0D,kBAAW,MAArE;AAA4E,IAAA,QAAQ,MAApF;AAAqF,IAAA,KAAK,MAA1F;AACE,IAAA,OAAO,EAAE,mBAAM;AACXf,MAAAA,eAAe;AAClB,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAXF,EAkBE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACe,MAAAA,eAAe,EAAC;AAAjB,KAAf;AAA4C,IAAA,KAAK,EAAC,OAAlD;AAA0D,kBAAW,MAArE;AAA4E,IAAA,QAAQ,MAApF;AAAqF,IAAA,KAAK,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlBF,CADF,EAuBE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEZ,OAAO,CAACa,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,SAAS,KAAKa,SAAd,GACC,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEd,OAAO,CAACE,gBAAgB,GAAG,aAApB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEF,OAAO,CAACe,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,SAAS,CAACe,GAAV,CAAc,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC5B,WACE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAElB,OAAO,CAACmB,SAAR,GAAoB,GAApB,GAA0BnB,OAAO,CAACoB,aAD/C;AAEE,MAAA,GAAG,EAAEF,GAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGD,IAJH,CADF;AAQD,GATA,CADH,CADF,CADD,GAeG,IAhBN,EAiBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEId,KAAK,CAACA,KAAN,IAAeA,KAAK,CAACA,KAAN,CAAYA,KAAZ,CAAkBkB,MAAlB,GAA2B,CAA1C,GAA+ClB,KAAK,CAACA,KAAN,CAAYA,KAAZ,CAAkBa,GAAlB,CAAsB,UAACC,IAAD,EAAOC,GAAP,EAAe;AAClF,QAAII,OAAO,GAAGL,IAAI,CAACM,IAAnB;AACA,WACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEL,GAAf;AAAoB,MAAA,SAAS,EAAElB,OAAO,CAACwB,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIC,MAAM,CAACC,OAAP,CAAeT,IAAf,EAAqBD,GAArB,CAAyB,UAACC,IAAD,EAAOC,GAAP,EAAe;AACtC,aACED,IAAI,CAAC,CAAD,CAAJ,KAAY,MAAZ,GACC,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAEjB,OAAO,CAACmB,SAA9B;AAAyC,QAAA,GAAG,EAAED,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEED,IAAI,CAAC,CAAD,CAAJ,KAAY,MAAZ,GACEA,IAAI,CAAC,CAAD,CAAJ,KAAY,QAAb,GACG,oBAAC,IAAD;AAAM,QAAA,UAAU,EAAEK,OAAlB;AAA2B,QAAA,OAAO,EAAE;AAAA,iBAAM1B,eAAe,CAAC0B,OAAD,CAArB;AAAA,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2CL,IAAI,CAAC,CAAD,CAA/C,CAApE,CADH,GAEG,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2CA,IAAI,CAAC,CAAD,CAA/C,CAHJ,GAIEA,IAAI,CAAC,CAAD,CAAJ,IAAW,aAAZ,GACG,oBAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBA,IAAI,CAAC,CAAD,CAArB,CADH,GAECA,IAAI,CAAC,CAAD,CARR,CADD,GAYiB,EAbnB;AAeD,KAhBD,CAFJ,CADF;AAuBD,GAzB8C,CAA/C,GAyBM,IA3BV,CAjBF,CADA,CAvBF,CADF,CADJ,CADF,CADF;AAkFD;;AAGD,SAASU,eAAT,CAAyBjC,KAAzB,EAAgC;AAC9BI,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,SAAO;AACLS,IAAAA,KAAK,EAAET,KAAK,CAACS;AADR,GAAP;AAGD;;AAED,SAASyB,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO5C,kBAAkB,CAAE;AAACF,IAAAA,YAAY,EAAZA,YAAD;AAAeC,IAAAA,UAAU,EAAVA;AAAf,GAAF,EAA8B6C,QAA9B,CAAzB;AACD;;AAED,eAAe/C,OAAO,CAAC6C,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CvC,SAA7C,CAAf;AAEAA,SAAS,CAACyC,YAAV,GAAyB;AACvB5B,EAAAA,gBAAgB,EAAE;AADK,CAAzB;AAIAb,SAAS,CAAC0C,SAAV,GAAsB;AACpB7B,EAAAA,gBAAgB,EAAErC,SAAS,CAACmE,KAAV,CAAgB,CAChC,SADgC,EAEhC,SAFgC,EAGhC,QAHgC,EAIhC,SAJgC,EAKhC,MALgC,EAMhC,MANgC,EAOhC,MAPgC,CAAhB,CADE;AAUpB/B,EAAAA,SAAS,EAAEpC,SAAS,CAACoE,OAAV,CAAkBpE,SAAS,CAACqE,MAA5B,CAVS;AAWpBC,EAAAA,SAAS,EAAEtE,SAAS,CAACoE,OAAV,CAAkBpE,SAAS,CAACoE,OAAV,CAAkBpE,SAAS,CAACqE,MAA5B,CAAlB;AAXS,CAAtB","sourcesContent":["import React, { useEffect } from \"react\";\nimport Moment from 'react-moment';\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Stars from \"@material-ui/icons/Stars\";\nimport Add from \"@material-ui/icons/Add\";\nimport GridItem from \"../../components/shared/Grid/GridItem.js\";\nimport GridContainer from \"../../components/shared/Grid/GridContainer.js\";\nimport Card from \"../../components/shared/Card/Card.js\";\nimport CardHeader from \"../../components/shared/Card/CardHeader.js\";\nimport CardBody from \"../../components/shared/Card/CardBody.js\";\nimport Button from \"../../components/shared/CustomButtons/Button.js\";\nimport CustomInput from 'components/shared/CustomInput/CustomInput.js';\nimport { connect } from 'react-redux';\nimport {ListAllFiles, ClearState} from '../../actions/ListData.js';\nimport { bindActionCreators } from 'redux';\n\n// core components\nimport styles from \"../../assets/jss/material-dashboard-react/components/tableStyle.js\";\nimport { Link } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(styles);\n\nfunction ListFiels(props) {\n  useEffect(() => {\n    props.ListAllFiles(decodeURIComponent(props.params.folder));\n    return () => {\n       props.ClearState();\n    }\n  }, [])\n\n  state = {\n    fodler: ''\n  }\n\n  function rowClickHandler(folder)\n  {\n    props.ListAllFiles(folder);\n  }\n\n  function addClickHandler(folder) {\n    console.log(folder);\n  }\n\n  const classes = useStyles();\n  const { tableHead, tableHeaderColor, files } = props;\n  let iconType = null;\n  console.log('in Custom table');\n  console.log(props);\n\n  debugger;\n  return (\n    <div className={classes.tableResponsive}>\n      <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card plain>\n              <div style={{textAlign:'right'}}>\n                <CustomInput\n                  formControlProps={{\n                    className: classes.margin + \" \" + classes.search\n                  }}\n                  inputProps={{\n                    placeholder: \"Folder Name\",\n                    inputProps: {\n                      \"aria-label\": \"Folder Name\"\n                    }\n                  }}/>\n                <Button style={{backgroundColor:'#ff9800'}} color=\"black\" aria-label=\"edit\" justIcon round\n                  onClick={() => {\n                      addClickHandler();\n                  }}\n                >\n                  <Add />\n                </Button>\n                <Button style={{backgroundColor:'#ff9800'}} color=\"black\" aria-label=\"edit\" justIcon round>\n                  <Stars  />\n                </Button>\n              </div>\n              <CardBody>\n              <Table className={classes.table}>\n                {tableHead !== undefined ? (\n                  <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n                    <TableRow className={classes.tableHeadRow}>\n                      {tableHead.map((prop, key) => {\n                        return (\n                          <TableCell\n                            className={classes.tableCell + \" \" + classes.tableHeadCell}\n                            key={key}\n                          >\n                            {prop}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  </TableHead>\n                ) : null}\n                <TableBody>\n                  {\n                    files.files && files.files.files.length > 0 ? (files.files.files.map((prop, key) => {\n                      let rowProp = prop.Name;\n                      return (\n                        <TableRow key={key} className={classes.tableBodyRow}>\n                          {\n                            Object.entries(prop).map((prop, key) => {\n                              return (\n                                prop[0] !== 'Name' ?  \n                                (<TableCell className={classes.tableCell} key={key}>\n                                {\n                                  (prop[0] === \"Icon\" ? \n                                    (prop[1] === \"folder\") ? \n                                      (<Link folderName={rowProp} onClick={() => rowClickHandler(rowProp)}><Icon className=\"material-icons-outlined\">{prop[1]}</Icon></Link>) :\n                                      (<Icon className=\"material-icons-outlined\">{prop[1]}</Icon>) :\n                                    (prop[0] == \"LastChanged\") ? \n                                      (<Moment fromNow>{prop[1]}</Moment>) :\n                                    (prop[1])\n                                  )\n                                }\n                                </TableCell>) : ('')\n                              );\n                            })\n                          }\n                        </TableRow>\n                      );\n                    })) : null \n                  }\n                </TableBody>\n              </Table>\n              </CardBody>\n            </Card>\n          </GridItem>\n        </GridContainer>\n    </div>\n  );\n}\n\n\nfunction mapStateToProps(state) {\n  console.log('in mapStateToProps');\n  console.log(state);\n  return {\n    files: state.files\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators( {ListAllFiles, ClearState}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListFiels);\n\nListFiels.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\n\nListFiels.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n"]},"metadata":{},"sourceType":"module"}