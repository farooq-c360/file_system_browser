{"ast":null,"code":"var _jsxFileName = \"/Users/farooqahmed/Documents/Farooq Ahmed/react/kbs.web.mdd/file_system_browser/src/components/browser/ListFiles.js\";\nimport React, { useEffect } from \"react\";\nimport Moment from 'react-moment';\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { connect } from 'react-redux';\nimport { ListAllFiles, ClearState } from '../../actions/ListData.js';\nimport { bindActionCreators } from 'redux'; // core components\n\nimport styles from \"../../assets/jss/material-dashboard-react/components/tableStyle.js\";\nimport { Link } from \"@material-ui/core\";\nvar useStyles = makeStyles(styles);\n\nfunction ListFiels(props) {\n  useEffect(function () {\n    props.ListAllFiles(decodeURIComponent(props.params.folder));\n    return function () {\n      props.ClearState();\n    };\n  }, []);\n\n  function rowClickHandler(folder) {\n    props.ListAllFiles(folder);\n  }\n\n  var classes = useStyles();\n  console.log('hhhh');\n  console.log(props);\n  var tableHead = props.tableHead,\n      tableHeaderColor = props.tableHeaderColor,\n      files = props.files;\n  var iconType = null;\n  console.log('in Custom table');\n  console.log(props.files);\n  debugger;\n  return React.createElement(\"div\", {\n    className: classes.tableResponsive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, tableHead !== undefined ? React.createElement(TableHead, {\n    className: classes[tableHeaderColor + \"TableHeader\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    className: classes.tableHeadRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, tableHead.map(function (prop, key) {\n    return React.createElement(TableCell, {\n      className: classes.tableCell + \" \" + classes.tableHeadCell,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, prop);\n  }))) : null, React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, files.files && files.files.files.length > 0 ? files.files.files.map(function (prop, key) {\n    console.log('rendering');\n    var rowProp = prop.Name;\n    return React.createElement(TableRow, {\n      key: key,\n      className: classes.tableBodyRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, Object.entries(prop).map(function (prop, key) {\n      return prop[0] !== 'Name' ? React.createElement(TableCell, {\n        className: classes.tableCell,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, prop[0] === \"Icon\" ? prop[1] === \"folder\" ? React.createElement(Link, {\n        folderName: rowProp,\n        onClick: function onClick() {\n          return rowClickHandler(rowProp);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"material-icons-outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, prop[1])) : React.createElement(Icon, {\n        className: \"material-icons-outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, prop[1]) : prop[0] == \"LastChanged\" ? React.createElement(Moment, {\n        fromNow: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, prop[1]) : prop[1]) : '';\n    }));\n  }) : null)));\n}\n\nfunction mapStateToProps(state) {\n  console.log('in mapStateToProps');\n  console.log(state);\n  return {\n    files: state.files\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    ListAllFiles: ListAllFiles,\n    ClearState: ClearState\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListFiels);\nListFiels.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\nListFiels.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\"warning\", \"primary\", \"danger\", \"success\", \"info\", \"rose\", \"gray\"]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};","map":{"version":3,"sources":["/Users/farooqahmed/Documents/Farooq Ahmed/react/kbs.web.mdd/file_system_browser/src/components/browser/ListFiles.js"],"names":["React","useEffect","Moment","PropTypes","makeStyles","Table","TableHead","TableRow","TableBody","TableCell","Icon","connect","ListAllFiles","ClearState","bindActionCreators","styles","Link","useStyles","ListFiels","props","decodeURIComponent","params","folder","rowClickHandler","classes","console","log","tableHead","tableHeaderColor","files","iconType","tableResponsive","table","undefined","tableHeadRow","map","prop","key","tableCell","tableHeadCell","length","rowProp","Name","tableBodyRow","Object","entries","mapStateToProps","state","mapDispatchToProps","dispatch","defaultProps","propTypes","oneOf","arrayOf","string","tableData"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Moment from 'react-moment';\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { connect } from 'react-redux';\nimport {ListAllFiles, ClearState} from '../../actions/ListData.js';\nimport { bindActionCreators } from 'redux';\n\n// core components\nimport styles from \"../../assets/jss/material-dashboard-react/components/tableStyle.js\";\nimport { Link } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(styles);\n\nfunction ListFiels(props) {\n  useEffect(() => {\n    props.ListAllFiles(decodeURIComponent(props.params.folder));\n    return () => {\n       props.ClearState();\n    }\n  }, [])\n\n  function rowClickHandler(folder)\n  {\n    props.ListAllFiles(folder);\n  }\n\n  const classes = useStyles();\n  console.log('hhhh');\n  console.log(props);\n  const { tableHead, tableHeaderColor, files } = props;\n  let iconType = null;\n  console.log('in Custom table');\n  console.log(props.files);\n  debugger;\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {\n            files.files && files.files.files.length > 0 ? (files.files.files.map((prop, key) => {\n              console.log('rendering');\n              let rowProp = prop.Name;\n              return (\n                <TableRow key={key} className={classes.tableBodyRow}>\n                  {\n                    Object.entries(prop).map((prop, key) => {\n                      return (\n                        prop[0] !== 'Name' ?  \n                        (<TableCell className={classes.tableCell} key={key}>\n                        {\n                          (prop[0] === \"Icon\" ? \n                            (prop[1] === \"folder\") ? \n                              (<Link folderName={rowProp} onClick={() => rowClickHandler(rowProp)}><Icon className=\"material-icons-outlined\">{prop[1]}</Icon></Link>) :\n                              (<Icon className=\"material-icons-outlined\">{prop[1]}</Icon>) :\n                            (prop[0] == \"LastChanged\") ? \n                              (<Moment fromNow>{prop[1]}</Moment>) :\n                            (prop[1])\n                          )\n                        }\n                        </TableCell>) : ('')\n                      );\n                    })\n                  }\n                </TableRow>\n              );\n            })) : null \n          }\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\n\nfunction mapStateToProps(state) {\n  console.log('in mapStateToProps');\n  console.log(state);\n  return {\n    files: state.files\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators( {ListAllFiles, ClearState}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListFiels);\n\nListFiels.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\n\nListFiels.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n"]},"metadata":{},"sourceType":"module"}