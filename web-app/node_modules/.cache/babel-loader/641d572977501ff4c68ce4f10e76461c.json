{"ast":null,"code":"import _slicedToArray from \"/Users/farooqahmed/Documents/Farooq Ahmed/react/kbs.web.fb/file_system_browser/web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/farooqahmed/Documents/Farooq Ahmed/react/kbs.web.fb/file_system_browser/web-app/src/components/browser/Home.js\";\nimport React, { useEffect, useState } from 'react';\nimport Moment from 'react-moment';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; // @material-ui/core components\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport Icon from '@material-ui/core/Icon';\nimport Stars from '@material-ui/icons/Stars';\nimport Add from '@material-ui/icons/Add';\nimport GridItem from '../shared/Grid/GridItem.js';\nimport GridContainer from '../shared/Grid/GridContainer.js';\nimport Card from '../shared/Card/Card.js';\nimport CardBody from '../shared/Card/CardBody.js';\nimport Button from '../shared/CustomButtons/Button.js';\nimport CustomInput from 'components/shared/CustomInput/CustomInput.js';\nimport { connect } from 'react-redux';\nimport { ListAllFiles, AddFolder, ClearState } from '../../actions/browser.js';\nimport { AddBookmark } from '../../actions/bookmark.js';\nimport { bindActionCreators } from 'redux'; // core components\n\nimport styles from '../../assets/jss/material-dashboard-react/components/tableStyle.js';\nimport { Link } from '@material-ui/core';\nvar useStyles = makeStyles(styles);\n\nfunction Home(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      newFolder = _useState2[0],\n      setNewFolder = _useState2[1];\n\n  useEffect(function () {\n    props.ListAllFiles(decodeURIComponent(props.params.folder));\n    return function () {\n      props.ClearState();\n    };\n  }, []);\n\n  function rowClickHandler(folder) {\n    props.ListAllFiles(folder);\n    props.params.folder = folder;\n  }\n\n  function folderChangeHandler(event) {\n    setNewFolder(event.target.value);\n  }\n\n  function addFolderCallback() {\n    props.ListAllFiles(decodeURIComponent(props.params.folder));\n    setNewFolder('');\n  }\n\n  function addFolderHandler() {\n    props.AddFolder(newFolder, decodeURIComponent(props.params.folder), addFolderCallback);\n  }\n\n  function addBookmarkHandler() {\n    props.AddBookmark('5d9ec846bbf735c6917f737b', decodeURIComponent(props.params.folder));\n  }\n\n  console.log('here*****');\n  console.log(props);\n  var classes = useStyles();\n  var tableHead = props.tableHead,\n      tableHeaderColor = props.tableHeaderColor,\n      files = props.files;\n  var disabledAddBookmark = props.files.files && props.files.files.isBookmarked ? {\n    disabled: 'disabled'\n  } : {};\n  var disabledAddFolder = !newFolder ? {\n    disabled: 'disabled'\n  } : {};\n\n  var notify = function notify() {\n    return toast(\"Wow so easy !\");\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.tableResponsive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(GridContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Card, {\n    plain: true,\n    style: {\n      textAlign: 'right',\n      marginTop: '0px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      textAlign: 'left',\n      marginLeft: '15px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, decodeURIComponent(props.params.folder))), React.createElement(\"div\", {\n    style: {\n      textAlign: 'right',\n      marginTop: '0px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(CustomInput, {\n    formControlProps: {\n      className: classes.margin + ' ' + classes.search\n    },\n    inputProps: {\n      onChange: folderChangeHandler,\n      placeholder: 'Folder Name',\n      inputProps: {\n        'aria-label': 'Folder Name',\n        value: newFolder\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Button, Object.assign({}, disabledAddFolder, {\n    style: {\n      backgroundColor: '#ff9800'\n    },\n    color: \"black\",\n    \"aria-label\": \"edit\",\n    justIcon: true,\n    round: true,\n    onClick: function onClick() {\n      addFolderHandler();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Add, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(Button, Object.assign({}, disabledAddBookmark, {\n    style: {\n      backgroundColor: '#ff9800'\n    },\n    color: \"black\",\n    \"aria-label\": \"edit\",\n    justIcon: true,\n    round: true,\n    onClick: function onClick() {\n      addBookmarkHandler();\n      toast.success('Bookmarked successfully');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(Stars, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, tableHead !== undefined ? React.createElement(TableHead, {\n    className: classes[tableHeaderColor + 'TableHeader'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    className: classes.tableHeadRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, tableHead.map(function (prop, key) {\n    return React.createElement(TableCell, {\n      className: classes.tableCell + ' ' + classes.tableHeadCell,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, prop);\n  }))) : null, React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, files.files && files.files.files.length > 0 ? files.files.files.map(function (prop, key) {\n    var rowProp = prop.Name;\n    return React.createElement(TableRow, {\n      key: key,\n      className: classes.tableBodyRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, Object.entries(prop).map(function (prop, key) {\n      return prop[0] !== 'Name' ? React.createElement(TableCell, {\n        className: classes.tableCell,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, prop[0] === 'Icon' ? prop[1] === 'folder' ? React.createElement(Link, {\n        folderName: rowProp,\n        onClick: function onClick() {\n          rowClickHandler(rowProp);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"material-icons-outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, prop[1])) : React.createElement(Icon, {\n        className: \"material-icons-outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, prop[1]) : prop[0] == 'LastChanged' ? prop[1].length > 0 ? React.createElement(Moment, {\n        fromNow: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, prop[1]) : '' : prop[1] === 0 ? '' : prop[1]) : '';\n    }));\n  }) : null)))))), React.createElement(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }));\n}\n\nfunction mapStateToProps(state) {\n  console.log('hhhhhhhhhh');\n  console.log(state);\n  if (state.files.files && state.files.files.err) toast.warn(\"error.toJSON()\");\n  return {\n    files: state.files\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    ListAllFiles: ListAllFiles,\n    AddFolder: AddFolder,\n    ClearState: ClearState,\n    AddBookmark: AddBookmark\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\nHome.defaultProps = {\n  tableHeaderColor: 'gray'\n};\nHome.propTypes = {\n  tableHeaderColor: PropTypes.oneOf(['warning', 'primary', 'danger', 'success', 'info', 'rose', 'gray']),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};","map":{"version":3,"sources":["/Users/farooqahmed/Documents/Farooq Ahmed/react/kbs.web.fb/file_system_browser/web-app/src/components/browser/Home.js"],"names":["React","useEffect","useState","Moment","PropTypes","ToastContainer","toast","makeStyles","Table","TableHead","TableRow","TableBody","TableCell","Icon","Stars","Add","GridItem","GridContainer","Card","CardBody","Button","CustomInput","connect","ListAllFiles","AddFolder","ClearState","AddBookmark","bindActionCreators","styles","Link","useStyles","Home","props","newFolder","setNewFolder","decodeURIComponent","params","folder","rowClickHandler","folderChangeHandler","event","target","value","addFolderCallback","addFolderHandler","addBookmarkHandler","console","log","classes","tableHead","tableHeaderColor","files","disabledAddBookmark","isBookmarked","disabled","disabledAddFolder","notify","tableResponsive","textAlign","marginTop","marginLeft","className","margin","search","onChange","placeholder","inputProps","backgroundColor","success","table","undefined","tableHeadRow","map","prop","key","tableCell","tableHeadCell","length","rowProp","Name","tableBodyRow","Object","entries","mapStateToProps","state","err","warn","mapDispatchToProps","dispatch","defaultProps","propTypes","oneOf","arrayOf","string","tableData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Moment from 'react-moment';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// @material-ui/core components\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport Icon from '@material-ui/core/Icon';\nimport Stars from '@material-ui/icons/Stars';\nimport Add from '@material-ui/icons/Add';\nimport GridItem from '../shared/Grid/GridItem.js';\nimport GridContainer from '../shared/Grid/GridContainer.js';\nimport Card from '../shared/Card/Card.js';\nimport CardBody from '../shared/Card/CardBody.js';\nimport Button from '../shared/CustomButtons/Button.js';\nimport CustomInput from 'components/shared/CustomInput/CustomInput.js';\nimport { connect } from 'react-redux';\nimport { ListAllFiles, AddFolder, ClearState } from '../../actions/browser.js';\nimport { AddBookmark } from '../../actions/bookmark.js';\nimport { bindActionCreators } from 'redux';\n\n// core components\nimport styles from '../../assets/jss/material-dashboard-react/components/tableStyle.js';\nimport { Link } from '@material-ui/core';\n\nconst useStyles = makeStyles(styles);\n\nfunction Home(props) {\n  const [newFolder, setNewFolder] = useState('');\n\n  useEffect(() => {\n    props.ListAllFiles(decodeURIComponent(props.params.folder));\n    return () => {\n       props.ClearState();\n    }\n  }, [])\n\n  function rowClickHandler(folder)\n  {\n    props.ListAllFiles(folder);\n    props.params.folder = folder;\n  }\n\n  function folderChangeHandler(event) {\n    setNewFolder(event.target.value);\n  }\n\n  function addFolderCallback() {\n    props.ListAllFiles(decodeURIComponent(props.params.folder));\n    setNewFolder('');\n  }\n\n  function addFolderHandler() {\n    props.AddFolder(newFolder, decodeURIComponent(props.params.folder), addFolderCallback);\n  }\n\n  function addBookmarkHandler() {\n    props.AddBookmark('5d9ec846bbf735c6917f737b', decodeURIComponent(props.params.folder));\n  }\n\n  console.log('here*****')\n  console.log(props);\n\n  const classes = useStyles();\n  const { tableHead, tableHeaderColor, files } = props;\n  const disabledAddBookmark = (props.files.files && props.files.files.isBookmarked ? {disabled: 'disabled'} : {});\n  const disabledAddFolder = !newFolder ? { disabled: 'disabled'} : {};\n\n  const notify = () => toast(\"Wow so easy !\");\n\n  return (\n    <div className={classes.tableResponsive}>\n      <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card plain style={{textAlign:'right', marginTop: '0px'}}>\n              <div style={{textAlign:'left', marginLeft: '15px'}}>\n                <label>{decodeURIComponent(props.params.folder)}</label>\n              </div>\n              <div style={{textAlign:'right', marginTop: '0px'}}>\n                <CustomInput\n                  formControlProps={{\n                    className: classes.margin + ' ' + classes.search\n                  }}\n                  inputProps={{\n                    onChange: folderChangeHandler,\n                    placeholder: 'Folder Name',\n                    inputProps: {\n                      'aria-label': 'Folder Name',\n                      value : newFolder\n                    }\n                  }}/>\n                <Button {...disabledAddFolder} style={{backgroundColor:'#ff9800'}} color='black' aria-label='edit' justIcon round\n                  onClick={() => {\n                    addFolderHandler();\n                  }}\n                >\n                  <Add />\n                </Button>\n                <Button {...disabledAddBookmark} style={{backgroundColor:'#ff9800'}} color='black' aria-label='edit' justIcon round\n                  onClick={() => {\n                      addBookmarkHandler();\n                      toast.success('Bookmarked successfully');\n                  }}\n                >\n                  <Stars  />\n                </Button>\n              </div>\n              <CardBody>\n              <Table className={classes.table}>\n                {tableHead !== undefined ? (\n                  <TableHead className={classes[tableHeaderColor + 'TableHeader']}>\n                    <TableRow className={classes.tableHeadRow}>\n                      {tableHead.map((prop, key) => {\n                        return (\n                          <TableCell\n                            className={classes.tableCell + ' ' + classes.tableHeadCell}\n                            key={key}\n                          >\n                            {prop}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  </TableHead>\n                ) : null}\n                <TableBody>\n                  {\n                    files.files && files.files.files.length > 0 ? (files.files.files.map((prop, key) => {\n                      let rowProp = prop.Name;\n                      return (\n                        <TableRow key={key} className={classes.tableBodyRow}>\n                          {\n                            Object.entries(prop).map((prop, key) => {\n                              return (\n                                prop[0] !== 'Name' ?  \n                                (<TableCell className={classes.tableCell} key={key}>\n                                {\n                                  (prop[0] === 'Icon' ? \n                                    (prop[1] === 'folder') ? \n                                      (<Link folderName={rowProp} onClick={() => \n                                        { \n                                          rowClickHandler(rowProp);\n                                        } }>\n                                        <Icon className='material-icons-outlined'>{prop[1]}</Icon></Link>) :\n                                      (<Icon className='material-icons-outlined'>{prop[1]}</Icon>) :\n                                    (prop[0] == 'LastChanged') ? \n                                      (prop[1].length > 0 ? <Moment fromNow>{prop[1]}</Moment> : '') :\n                                    ((prop[1] === 0) ? '' : prop[1])\n                                  )\n                                }\n                                </TableCell>) : ('')\n                              );\n                            })\n                          }\n                        </TableRow>\n                      );\n                    })) : null \n                  }\n                </TableBody>\n              </Table>\n              </CardBody>\n            </Card>\n          </GridItem>\n        </GridContainer>\n        <ToastContainer />\n    </div>\n  );\n}\n\n\nfunction mapStateToProps(state) {\n  console.log('hhhhhhhhhh');\n  console.log(state);\n  if(state.files.files && state.files.files.err) toast.warn(\"error.toJSON()\");\n  return {\n    files: state.files\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators( {ListAllFiles, AddFolder, ClearState, AddBookmark}, dispatch);\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(Home);\n\nHome.defaultProps = {\n  tableHeaderColor: 'gray'\n};\n\nHome.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    'warning',\n    'primary',\n    'danger',\n    'success',\n    'info',\n    'rose',\n    'gray'\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n"]},"metadata":{},"sourceType":"module"}