{"ast":null,"code":"import axios from 'axios';\nimport config from '../config/config';\nexport function ListAllFiles(folder) {\n  var request = axios.get(config.get(process.env.NODE_ENV).API_URLS.BROWSER.LIST + encodeURIComponent(folder)).then(function (result) {\n    console.log('here....', folder);\n    var mData = result.data.files.map(function (d) {\n      var dItem = {\n        'Icon': d.IsDirectory ? 'folder' : 'description',\n        'Name': (folder === '/' ? '/' : folder + '/') + (d.Name + (d.Ext === undefined ? '' : d.Ext)),\n        'DisplayName': d.Name + (d.Ext === undefined ? '' : d.Ext),\n        'LastChanged': d.LastChanged,\n        'Size': d.Size,\n        'IsBookmarked': d.IsBookmarked\n      };\n      return dItem;\n    });\n    var folderName = decodeURIComponent(folder);\n    var folders = folderName.split('/');\n    console.log(folderName);\n\n    if (folderName !== '/') {\n      folders.length = folders.length - 1;\n      mData.unshift({\n        Icon: 'folder',\n        Name: folders.join('/').length > 0 ? folders.join('/') : '/',\n        DisplayName: '..',\n        LastChanged: '...',\n        Size: 0\n      });\n    }\n\n    return {\n      files: mData,\n      isBookmarked: result.data.isBookmarked,\n      folder: folder\n    };\n  });\n  return {\n    type: 'LIST_ALL_FILES',\n    payload: request\n  };\n}\nexport function AddFolder(folder, parentFolder, next) {\n  console.log('in action');\n  console.log(parentFolder + folder);\n  var request = axios.post(config.get(process.env.NODE_ENV).API_URLS.BROWSER.ADD, {\n    type: 'folder',\n    folder: folder,\n    parentFolder: parentFolder\n  }).then(function (result) {\n    next();\n  })[\"catch\"](function (err) {\n    console.log(err);\n  });\n  return {\n    type: 'ADD_FOLDER',\n    payload: null\n  };\n}\nexport function ClearState() {\n  return {\n    type: 'CLEAR_STATE',\n    payload: null\n  };\n}","map":{"version":3,"sources":["/Users/farooqahmed/Documents/Farooq Ahmed/react/kbs.web.fb/file_system_browser/web-app/src/actions/browser.js"],"names":["axios","config","ListAllFiles","folder","request","get","process","env","NODE_ENV","API_URLS","BROWSER","LIST","encodeURIComponent","then","result","console","log","mData","data","files","map","d","dItem","IsDirectory","Name","Ext","undefined","LastChanged","Size","IsBookmarked","folderName","decodeURIComponent","folders","split","length","unshift","Icon","join","DisplayName","isBookmarked","type","payload","AddFolder","parentFolder","next","post","ADD","err","ClearState"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport config from '../config/config'\n\nexport function ListAllFiles(folder) {\n    const request =  axios.get(\n      config.get(process.env.NODE_ENV).API_URLS.BROWSER.LIST + encodeURIComponent(folder),\n      ).then(result =>  {\n          console.log('here....', folder);\n          var mData = result.data.files.map(d => {\n              var dItem = {\n                'Icon' : d.IsDirectory ? 'folder' : 'description',\n                'Name' : (folder === '/' ? '/' : folder + '/')  + (d.Name + (d.Ext === undefined ? '' : d.Ext)),\n                'DisplayName': d.Name + (d.Ext === undefined ? '' : d.Ext),\n                'LastChanged' : d.LastChanged,\n                'Size':  d.Size,\n                'IsBookmarked' : d.IsBookmarked\n              };\n              return dItem;\n            });\n\n            let folderName = decodeURIComponent(folder);\n            let folders = folderName.split('/');\n            console.log(folderName);\n            if(folderName !== '/') {\n              folders.length = folders.length - 1;\n              mData.unshift({Icon: 'folder', Name: folders.join('/').length > 0 ? folders.join('/') : '/', \n              DisplayName: '..', LastChanged: '...', Size: 0 });\n            }\n\n            return { files:mData, isBookmarked: result.data.isBookmarked, folder  };\n      });\n      \n    return {\n        type: 'LIST_ALL_FILES',\n        payload: request\n    }\n}\n\nexport function AddFolder(folder, parentFolder, next) {\n  console.log('in action');\n  console.log(parentFolder + folder);\n  \n  const request = axios.post(\n    config.get(process.env.NODE_ENV).API_URLS.BROWSER.ADD ,\n    {\n      type : 'folder',\n      folder: folder,\n      parentFolder: parentFolder\n    }\n  ).then(result => {\n    next();\n  }).catch(err => {\n    console.log(err);\n  });\n\n  return {\n    type: 'ADD_FOLDER',\n    payload: null\n  }\n}\n\nexport function ClearState() {\n    return {\n        type: 'CLEAR_STATE',\n        payload: null\n    }\n}"]},"metadata":{},"sourceType":"module"}